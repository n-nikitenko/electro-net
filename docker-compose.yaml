services:
  db:
    image: postgres:12.18-alpine
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
    restart: on-failure
    environment:
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.settings}
    ports:
      - "8000:8000"
    command: >
      sh -c "poetry run python manage.py migrate &&
             poetry run python manage.py collectstatic --noinput &&
             poetry run gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static-data:/code/static
      - .:/code
    env_file:
      - .env
    tty: true

  nginx:
    image: nginx:latest
    restart: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static-data:/code/static
    ports:
      - "8080:80"
    depends_on:
      - app

volumes:
  pg-data:
  static-data:
